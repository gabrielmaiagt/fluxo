'use client';

import { useEffect, useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { useToast } from '@/hooks/use-toast';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import { BellRing, Check, Info } from 'lucide-react';
import { enablePushNotifications } from '@/lib/push';

export default function AdminPage() {
  const [isLoading, setIsLoading] = useState(false);
  const [isSupported, setIsSupported] = useState<boolean | null>(null);
  const [permission, setPermission] = useState<NotificationPermission | null>(null);
  const { toast } = useToast();

  useEffect(() => {
    const isClient = typeof window !== 'undefined';
    // O suporte a Push √© mais complexo, envolve 'Notification', 'serviceWorker' e 'PushManager'
    const supported = isClient && 'Notification' in window && 'serviceWorker' in navigator && 'PushManager' in window;
    setIsSupported(supported);
    if (supported) {
      setPermission(Notification.permission);
    }
  }, []);

  const handleRequestPermission = async () => {
    if (!isSupported) return;

    setIsLoading(true);
    try {
      await enablePushNotifications();
      
      setPermission('granted'); // Atualiza o estado da permiss√£o na UI
      
      toast({
        title: "Sucesso!",
        description: "Voc√™ agora receber√° notifica√ß√µes push sobre as a√ß√µes dos usu√°rios.",
        variant: "default",
      });

      // Notifica√ß√£o de confirma√ß√£o
      new Notification("Notifica√ß√µes Ativadas", {
        body: "Tudo pronto para receber alertas em tempo real!",
        icon: "/favicon.ico"
      });

    } catch (error: any) {
      console.error("Erro ao ativar notifica√ß√µes:", error);
      toast({
        title: "Erro ao ativar notifica√ß√µes",
        description: `Detalhes: ${error.message}`,
        variant: "destructive",
        duration: 9000,
      });
      // Se o erro foi de permiss√£o, atualiza o estado da UI
      if (error.message.includes('negada')) {
        setPermission('denied');
      }
    } finally {
      setIsLoading(false);
    }
  };
  
  const getButtonText = () => {
    if(isLoading) return 'Ativando...';
    if(permission === 'granted') return ( <><Check className="mr-2 h-4 w-4" /> Notifica√ß√µes Ativadas</> );
    if(permission === 'denied') return 'Permiss√£o Negada';
    return 'Ativar Notifica√ß√µes Push';
  }

  return (
    <div className="flex min-h-screen items-center justify-center bg-background p-4">
      <Card className="w-full max-w-md bg-card">
        <CardHeader>
          <CardTitle>Painel de Administrador</CardTitle>
          <CardDescription>
            Receba notifica√ß√µes push em tempo real sobre a atividade dos usu√°rios.
          </CardDescription>
        </CardHeader>
        <CardContent>
          {isSupported === false && (
             <Alert variant="destructive">
                <BellRing className="h-4 w-4" />
                <AlertTitle>Navegador n√£o compat√≠vel!</AlertTitle>
                <AlertDescription>
                    Seu navegador atual n√£o suporta a API de Notifica√ß√µes Push.
                </AlertDescription>
            </Alert>
          )}

          {isSupported && (
            <div className="space-y-4">
                <Alert variant="default" className="border-primary/50 text-primary-foreground">
                    <Info className="h-4 w-4 !text-primary" />
                    <AlertTitle>Como funciona?</AlertTitle>
                    <AlertDescription>
                        <p>Clique no bot√£o abaixo para permitir as notifica√ß√µes. Uma vez ativado, voc√™ receber√° um alerta no seu dispositivo sempre que um usu√°rio clicar em um link importante, mesmo com esta p√°gina fechada.</p>
                    </AlertDescription>
                </Alert>
              <Button 
                onClick={handleRequestPermission} 
                disabled={isLoading || permission === 'granted' || permission === 'denied'}
                className="w-full"
              >
                {getButtonText()}
              </Button>
               {permission === 'denied' && (
                 <p className="text-xs text-center text-destructive">
                   Voc√™ bloqueou as notifica√ß√µes. Para reativ√°-las, voc√™ precisa alterar as permiss√µes nas configura√ß√µes do seu navegador (geralmente no √≠cone de cadeado üîí na barra de endere√ßo).
                 </p>
               )}
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
